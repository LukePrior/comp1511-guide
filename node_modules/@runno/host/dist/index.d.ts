import { RemoteHandle } from "post-me";
import { Runtime, RuntimeMethods, RunResult, FS, Syntax } from "./types";
export declare function generateEmbedURL(code: string, runtime: string, options?: {
    showControls?: boolean;
    showEditor?: boolean;
    autorun?: boolean;
    baseUrl?: string;
}): URL;
export declare function generateEmbedHTML(url: URL): string;
export declare function runtimeToSyntax(runtime: string | undefined | null): Syntax;
export declare class RunnoHost implements RuntimeMethods {
    remoteHandle: RemoteHandle<RuntimeMethods>;
    constructor(remoteHandle: RemoteHandle<RuntimeMethods>);
    showControls(): Promise<void>;
    hideControls(): Promise<void>;
    showEditor(): Promise<void>;
    hideEditor(): Promise<void>;
    setEditorProgram(syntax: Syntax, runtime: Runtime, code: string): Promise<void>;
    getEditorProgram(): Promise<string>;
    interactiveRunCode(runtime: Runtime, code: string): Promise<RunResult>;
    interactiveRunFS(runtime: Runtime, entryPath: string, fs: FS): Promise<RunResult>;
    interactiveUnsafeCommand(command: string, fs: FS): Promise<RunResult>;
    interactiveStop(): Promise<void>;
    headlessRunCode(runtime: Runtime, code: string, stdin?: string): Promise<RunResult>;
    headlessRunFS(runtime: Runtime, entryPath: string, fs: FS, stdin?: string): Promise<RunResult>;
    headlessUnsafeCommand(command: string, fs: FS, stdin?: string): Promise<RunResult>;
}
export declare function ConnectRunno(iframe: HTMLIFrameElement): Promise<RunnoHost>;
export * from "./types";
