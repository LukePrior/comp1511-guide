/// <reference types="node" />
import WasmTerminal from "@runno/terminal";
import { WasmFs } from "./wasmfs";
import { CommandResult } from "@runno/host";
import WAPM from "./wapm/wapm";
export declare class TerminalElement extends HTMLElement {
    wasmFs: WasmFs;
    wasmTerminal: WasmTerminal;
    wapm: WAPM;
    resizeObserver: ResizeObserver;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    onResize: () => void;
    fetchCommand(options: any): Promise<any>;
    writeFile(path: string, content: string | Buffer | Uint8Array): void;
    /**
     * Run a command and then wait for it to complete executing.
     * Promise resolves when the command is finished.
     *
     * @param command the raw terminal command to run
     */
    runCommand(command: string): Promise<CommandResult>;
    stop(): void | undefined;
    isReadyForCommand(): boolean;
    focus(): void;
    clear(): void;
}
