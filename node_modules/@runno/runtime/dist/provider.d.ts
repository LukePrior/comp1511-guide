import { EditorElement } from "./editor";
import { TerminalElement } from "./terminal";
import { RunResult, FS, Runtime, Syntax, RuntimeMethods } from "@runno/host";
import { ControlsElement } from "./controls";
export declare class RunnoProvider implements RuntimeMethods {
    terminal: TerminalElement;
    editor: EditorElement;
    controls?: ControlsElement;
    constructor(terminal: TerminalElement, editor: EditorElement, controls?: ControlsElement);
    writeFS(fs: FS): void;
    showControls(): void;
    hideControls(): void;
    showEditor(): void;
    hideEditor(): void;
    setEditorProgram(syntax: Syntax, runtime: Runtime, code: string): void;
    getEditorProgram(): Promise<string>;
    interactiveRunCode(runtime: Runtime, code: string): Promise<RunResult>;
    interactiveRunFS(runtime: Runtime, entryPath: string, fs: FS): Promise<RunResult>;
    interactiveUnsafeCommand(command: string, fs: FS): Promise<RunResult>;
    interactiveStop(): void;
    headlessRunCode(runtime: Runtime, code: string, stdin?: string): Promise<RunResult>;
    headlessRunFS(runtime: Runtime, entryPath: string, fs: FS, stdin?: string): Promise<RunResult>;
    headlessUnsafeCommand(command: string, fs: FS, stdin?: string): Promise<RunResult>;
}
